---
# file: roles/ctl-setup/tasks/core_infra.yml

- name: Login to the controller
  uri:
    url: "https://{{ baseurl }}/platform/login"
    method: POST
    body_format: json
    body:
      credentials:
        type: "BASIC"
        username: "{{ email }}"
        password: "{{ password }}"
    status_code: 204
    validate_certs: False
  register: login
  tags: core  

# Environments
- name: Create/configure environments
  uri:
    url: "https://{{ baseurl }}/services/environments/{{ item }}"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body:
      metadata:
        name: "{{ item }}"
        description: "{{ item }} environment on {{ basedomain }} infrastructure"
    status_code: 200,201,202
    validate_certs: False
  loop:
    - "lab"
    - "dev"
    - "test"
  tags: core

# Upload certificate
- name: Upload certificate
  uri:
    url: "https://{{ baseurl }}/services/environments/{{ item }}/certs/{{ item }}_wildcard"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body:
      metadata:
        name: "{{ item }}_wildcard"
      desiredState:
        type: PEM
        privateKey: "{{ lookup( 'file', '{{ certificate_path }}{{ item }}.{{ basedomain }}/privkey1.pem') }}"
        publicCert: "{{ lookup( 'file', '{{ certificate_path }}{{ item }}.{{ basedomain }}/cert1.pem' ) }}"
        caCerts: []
    status_code: 200,201,500
    validate_certs: False
  loop:
    - "lab"
    - "dev"
    - "test"
  tags: core

# Gateways
- name: Create/configure gateways
  uri:
    url: "https://{{ baseurl }}/services/environments/{{ item[1] }}/gateways/{{ item[0] }}.{{ item[1] }}.{{ basedomain }}-gw"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body: >
      { "metadata": { 
          "name": "{{ item[0] }}.{{ item[1] }}.{{ basedomain }}-gw",
          "displayName": "{{ item[0] }}.{{ item[1] }}"        
        },
        "desiredState": {
          "ingress": {
            "uris": {
              "http://{{ item[0] }}.{{ item[1] }}.{{ basedomain }}": {},
              "https://{{ item[0] }}.{{ item[1] }}.{{ basedomain }}": {
                "tls": {
                  "certRef": {
                    "ref": "/services/environments/{{ item[1] }}/certs/{{ item[1] }}_wildcard"
                  },
                  "protocols": [
                    "TLSv1.2",
                    "TLSv1.3"
                  ],
                  "preferServerCipher": "ENABLED"
                }
              }
            },
            "placement": {
              "instanceRefs": [ { "ref": "/infrastructure/locations/{{ location }}/instances/{{ envproxy[item[1]] }}" } ] 
            },
            "tls": {
              "certRef": {
                "ref": "/services/environments/{{ item[1] }}/certs/{{ item[1] }}_wildcard"
              },
              "preferServerCipher": "DISABLED"
            } 
          }
        }
      }
    status_code: 200,201,202
    validate_certs: False
  with_nested: 
    - [ 'devportal' ]
    - [ 'lab', 'dev']
  tags: core

# Developer portal
- name: Create developer portal 
  uri:
    url: "https://{{ baseurl }}/services/environments/{{ item }}/devportals/devportal-{{ item }}"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body: >
      {
        "metadata": {
          "name": "devportal-{{ item }}",
          "displayName": "DevPortal-{{ item }}",
          "tags": [],
          "kind": "devportal"
        },
        "desiredState": {
          "ingress": {
            "gatewayRefs": [
              {
                "ref": "/services/environments/{{ item }}/gateways/devportal.{{ item }}.{{ basedomain }}-gw"
              }
            ]
          },
          "devPortalTheme": {
            "customConfig": {
              "fonts": {
                "assignments": {
                  "headings": {
                    "kind": "google-web-font",
                    "value": "Lato"
                  },
                  "body": {
                    "kind": "google-web-font",
                    "value": "Fira+Sans"
                  },
                  "code": {
                    "kind": "google-web-font",
                    "value": "IBM+Plex+Mono"
                  },
                  "cta": {
                    "kind": "google-web-font",
                    "value": "Lato"
                  },
                  "special": {
                    "kind": "google-web-font",
                    "value": "Lato"
                  }
                }
              },
              "primary": {
                "color": {
                  "primary": "#3b43be",
                  "accent": "#3b43be",
                  "fill": "#ffffff",
                  "ink": "#171d21"
                }
              },
              "secondary": {
                "color": {
                  "primary": "#3b43be",
                  "accent": "#ffffff",
                  "fill": "#f7f8fa",
                  "ink": "#2c3039",
                  "gray": "#272938"
                }
              }
            },
            "brandName": "SAFTLADEN DevPortal {{ item }}"
          },
          "publishedApiRefs": [],
          "devPortalType": "private"
        }
      }
    status_code: 200, 201, 202
    validate_certs: False
  loop:
    - "lab"
    - "dev"
  tags: core

# IDP: API-Key
- name: Create/configure idp api-key 
  uri:
    url: "https://{{ baseurl }}/security/identity-providers/api_key"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body: >
      {
        "metadata": {
          "name": "api_key",
          "tags": []
        },
        "desiredState": {
          "environmentRefs": [
            {
              "ref": "/services/environments/lab"
            }
          ],
          "identityProvider": {
            "type": "API_KEY"
          }
        }
      }
    status_code: 200, 201, 202
    validate_certs: False
  tags: core

- name: Create/configure api-key client 
  uri:
    url: "https://{{ baseurl }}/security/identity-providers/api_key/clients"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body: >
      {
        "items": [
          {
            "metadata": {
              "name": "customer_a"
            },
            "desiredState": {
              "credential": {
                "apiKey": "a3087c72906aa2e16248d02eae710193",
                "type": "API_KEY"
              }
            }
          }
        ]
      }
    status_code: 200, 201, 202
    validate_certs: False
  tags: core  

# IDP: JWT validation
- name: Create/configure idp jwt validation
  uri:
    url: "https://{{ baseurl }}/security/identity-providers/jwt"
    method: PUT
    headers:
      Cookie: "{{ login.set_cookie }}"
    body_format: json
    body: >
      {
        "metadata": {
          "name": "jwt",
          "tags": []
        },
        "desiredState": {
          "environmentRefs": [
            {
              "ref": "/services/environments/lab"
            }
          ],
          "identityProvider": {
            "type": "JWT",
            "jwkFile": {
              "type": "REMOTE_FILE",
              "uri": "https://{{ octadomain }}/oauth2/v1/keys",
              "cacheExpire": "24h"
            }
          }
        }
      }
    status_code: 200, 201, 202
    validate_certs: False
  tags: core